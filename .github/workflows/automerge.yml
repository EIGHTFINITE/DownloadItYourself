name: "Dependabot Automerge"

on:
  pull_request:
    branches: [ master ]

permissions: write-all

jobs:
  package_json:
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' || github.actor == 'renovate[bot]' }}
    steps:
    - uses: actions/checkout@v3.4.0
      with:
        ref: ${{ github.event.pull_request.head.ref }}
    - name: package_json
      shell: bash
      run: |
        bash --noprofile --norc -e -o pipefail docs/tools/git-config.sh
        export npm_version=$(curl -sS 'https://registry.npmjs.org/npm' | python -c "import sys, json; print(json.load(sys.stdin)['dist-tags']['latest-6'])")
        export new_npm_version=$(cat package.json | python -c "import sys, json; print(json.load(sys.stdin)['dependencies']['npm'])")
        sed -i -z "s/\"npm\": \"[a-zA-Z0-9+.-]*\"/\"npm\": \"$npm_version\"/2" -- package.json
        sed -i "0,/\"npm\": \".*\"/s//\"npm\": \"$npm_version || $new_npm_version\"/" -- package.json
        git add package.json
        git -c user.name="GitHub" -c user.email="noreply@github.com" commit --author="github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>" -m"Fix package.json" | sed -n 1p || true
        git push
        if [[ $(git status --porcelain | tee /dev/stderr | head -c1 | wc -c) -ne 0 || $(git clean -dffx | tee /dev/stderr | head -c1 | wc -c) -ne 0 ]]
          then exit 1
        fi
  automerge:
    runs-on: ubuntu-latest
    needs: package_json
    if: ${{ github.actor == 'dependabot[bot]' && needs.package_json.result == 'success' }}
    steps:
    - name: automerge
      uses: actions/github-script@v6.4.0
      with:
        script: |
          github.rest.pulls.merge({
            owner: context.payload.repository.owner.login,
            repo: context.payload.repository.name,
            pull_number: context.payload.pull_request.number,
            merge_method: 'merge'
          })
