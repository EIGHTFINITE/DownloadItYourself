name: "npm"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.3.0
      with:
        path: EIGHTFINITE-build
    - name: install
      shell: bash
      run: |
        cd EIGHTFINITE-build
        bash --noprofile --norc -e -o pipefail docs/tools/git-config.sh
        git fetch --depth 1 origin +refs/tags/artifacts:refs/tags/artifacts --no-tags
        git restore --source=artifacts -- bin/
        bash --noprofile --norc -e -o pipefail docs/tools/actions-npm.sh
        export node_version=$(cat package.json | python -c "import sys, json; print(json.load(sys.stdin)['engines']['node'])")
        sed -i '/cache-max = 0/d' -- '.npmrc'
        sed -i '/only = prod/d' -- '.npmrc'
        sed -i '/optional = false/d' -- '.npmrc'
        sed -i '/production = true/d' -- '.npmrc'
        bin/linux/x64/node/node-v$node_version-linux-x64/bin/node node_modules/npm/bin/npm-cli.js ls || true
        rm -rf .npm/
        git checkout -- '.npmrc'
        # Ignore peerDependencies
        sed -i '/"peerDependencies": {/,/}/d' -- 'package.json'
        cd ..
        echo '{
          "private": "true"
        }' > package.json
        cp EIGHTFINITE-build/.npmrc .npmrc
        EIGHTFINITE-build/bin/linux/x64/node/node-v$node_version-linux-x64/bin/node EIGHTFINITE-build/bin/linux/x64/node/node-v$node_version-linux-x64/lib/node_modules/npm/bin/npm-cli.js install ./EIGHTFINITE-build
        rm -rf .npm/
  audit_linux:
    runs-on: ubuntu-latest
    needs: [install]
    if: ${{ needs.install.result == 'success' }}
    steps:
    - uses: actions/checkout@v3.3.0
    - name: audit
      shell: bash
      run: |
        bash --noprofile --norc -e -o pipefail docs/tools/git-config.sh
        git fetch --depth 1 origin +refs/tags/artifacts:refs/tags/artifacts --no-tags
        git restore --source=artifacts -- bin/
        bash --noprofile --norc -e -o pipefail docs/tools/actions-npm.sh
        export node_version=$(cat package.json | python -c "import sys, json; print(json.load(sys.stdin)['engines']['node'])")
        rm -r "bin/linux/x64/node/node-v$node_version-linux-x64/lib/node_modules/npm"
        cp -aR "node_modules/npm" "bin/linux/x64/node/node-v$node_version-linux-x64/lib/node_modules"
        export PATH="$(pwd)/bin/linux/x64/node/node-v$node_version-linux-x64/bin:$PATH"
        bin/linux/x64/node/node-v$node_version-linux-x64/bin/node node_modules/better-npm-audit/index.js audit
        rm -rf .npm/
  audit_windows:
    runs-on: windows-latest
    needs: [install]
    if: ${{ needs.install.result == 'success' }}
    steps:
    - uses: actions/checkout@v3.3.0
    - name: audit
      shell: bash
      run: |
        docs/tools/git-config.bat
        git fetch --depth 1 origin +refs/tags/artifacts:refs/tags/artifacts --no-tags
        git restore --source=artifacts -- bin/ node_modules/ package-lock.json
        export node_version=$(cat package.json | python -c "import sys, json; print(json.load(sys.stdin)['engines']['node'])")
        rm -r "bin/windows/x64/node/node-v$node_version-win-x64/node_modules/npm"
        cp -aR "node_modules/npm" "bin/windows/x64/node/node-v$node_version-win-x64/node_modules"
        export PATH="$(pwd)/bin/windows/x64/node/node-v$node_version-win-x64:$PATH"
        bin/windows/x64/node/node-v$node_version-win-x64/node.exe node_modules/better-npm-audit/index.js audit
        rm -rf .npm/
