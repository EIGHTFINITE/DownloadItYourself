name: "npm"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  npm_linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.0.2
      with:
        path: EIGHTFINITE-build
    - name: npm
      shell: bash
      run: |
        cd EIGHTFINITE-build
        bash --noprofile --norc -e -o pipefail docs/tools/git-config.sh
        git fetch --depth 1 origin +refs/tags/artifacts:refs/tags/artifacts --no-tags
        git restore --source=artifacts -- bin/
        export node_version=$(cat package.json | python -c "import sys, json; print(json.load(sys.stdin)['engines']['node'])")
        sudo ln -sf "$(pwd)/bin/linux/x64/node/node-v$node_version-linux-x64/bin/node" /usr/local/bin/node
        export npm_version=$(curl -sS 'https://registry.npmjs.org/npm' | python -c "import sys, json; print(json.load(sys.stdin)['dist-tags']['latest-6'])")
        wget -nv -O "npm-$npm_version.tgz" "https://registry.npmjs.org/npm/-/npm-$npm_version.tgz"
        mkdir -p "bin/all/all/npm/npm-$npm_version/npm"
        tar -xzf "npm-$npm_version.tgz" --strip-components=1 -C "bin/all/all/npm/npm-$npm_version/npm"
        rm "npm-$npm_version.tgz"
        echo -n "$node_version" > node_version.txt
        echo -n "$npm_version" > npm_version.txt
        bash --noprofile --norc -e -o pipefail docs/tools/actions-npm.sh
        bin/linux/x64/node/node-v$node_version-linux-x64/bin/node node_modules/npm-6/node_modules/npm/bin/npm-cli.js ls --no-unicode --loglevel=silent | grep -v ' deduped' || true
        rm -rf .npm/
        cd ..
        echo '{
          "private": "true"
        }' > package.json
        cp EIGHTFINITE-build/.npmrc .npmrc
        EIGHTFINITE-build/bin/linux/x64/node/node-v$node_version-linux-x64/bin/node EIGHTFINITE-build/node_modules/npm-6/node_modules/npm/bin/npm-cli.js install ./EIGHTFINITE-build
        rm -rf .npm/
  npm_windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3.0.2
      with:
        path: EIGHTFINITE-build
    - name: npm
      shell: bash
      run: |
        cd EIGHTFINITE-build
        docs/tools/git-config.bat
        git fetch --depth 1 origin +refs/tags/artifacts:refs/tags/artifacts --no-tags
        git restore --source=artifacts -- bin/
        rm -r "C:\\Program Files\\nodejs"
        export node_version=$(cat EIGHTFINITE-build/package.json | python -c "import sys, json; print(json.load(sys.stdin)['engines']['node'])")
        echo -n "$node_version" > node_version.txt
        export npm_version=$(curl -sS 'https://registry.npmjs.org/npm' | python -c "import sys, json; print(json.load(sys.stdin)['dist-tags']['latest-6'])")
        echo -n "$npm_version" > npm_version.txt
        cd ..
    - name: npm
      shell: cmd
      run: |
        cd EIGHTFINITE-build
        set /p node_version=<node_version.txt
        set /p npm_version=<npm_version.txt
        mklink /d "C:\Program Files\nodejs" "%cd%\bin\windows\x64\node\node-v%node_version%-win-x64"
        bin\windows\x64\msys2\msys2-base-x86_64-20220603\msys64\usr\bin\wget.exe -nv -O "npm-%npm_version%.tgz" "https://registry.npmjs.org/npm/-/npm-%npm_version%.tgz"
        cd ..
    - name: npm
      shell: bash
      run: |
        cd EIGHTFINITE-build
        export node_version=$(cat node_version.txt)
        export npm_version=$(cat npm_version.txt)
        mkdir -p "bin/all/all/npm/npm-$npm_version/npm"
        tar -xzf "npm-$npm_version.tgz" --strip-components=1 -C "bin/all/all/npm/npm-$npm_version/npm"
        rm "npm-$npm_version.tgz"
        bash --noprofile --norc -e -o pipefail docs/tools/actions-npm.sh
        sed -i '/"@types\/node": "/d' -- 'node_modules/electron/package.json'
        bin/windows/x64/node/node-v$node_version-win-x64/node.exe node_modules/npm-6/node_modules/npm/bin/npm-cli.js ls --no-unicode --loglevel=silent | grep -v ' deduped' || true
        rm -rf .npm/
        cd ..
        echo '{
          "private": "true"
        }' > package.json
        cp EIGHTFINITE-build/.npmrc .npmrc
        EIGHTFINITE-build/bin/windows/x64/node/node-v$node_version-win-x64/node.exe EIGHTFINITE-build/node_modules/npm-6/node_modules/npm/bin/npm-cli.js install .\\EIGHTFINITE-build
        rm -rf .npm/
  audit_linux:
    runs-on: ubuntu-latest
    needs: npm_linux
    if: needs.npm_linux.result == 'success'
    steps:
    - uses: actions/checkout@v3.0.2
    - name: audit
      shell: bash
      run: |
        bash --noprofile --norc -e -o pipefail docs/tools/git-config.sh
        git fetch --depth 1 origin +refs/tags/artifacts:refs/tags/artifacts --no-tags
        git restore --source=artifacts -- bin/
        export node_version=$(cat package.json | python -c "import sys, json; print(json.load(sys.stdin)['engines']['node'])")
        sudo ln -sf "$(pwd)/bin/linux/x64/node/node-v$node_version-linux-x64/bin/node" /usr/local/bin/node
        export npm_version=$(curl -sS 'https://registry.npmjs.org/npm' | python -c "import sys, json; print(json.load(sys.stdin)['dist-tags']['latest-6'])")
        wget -nv -O "npm-$npm_version.tgz" "https://registry.npmjs.org/npm/-/npm-$npm_version.tgz"
        mkdir -p "bin/all/all/npm/npm-$npm_version/npm"
        tar -xzf "npm-$npm_version.tgz" --strip-components=1 -C "bin/all/all/npm/npm-$npm_version/npm"
        rm "npm-$npm_version.tgz"
        echo -n "$node_version" > node_version.txt
        echo -n "$npm_version" > npm_version.txt
        bash --noprofile --norc -e -o pipefail docs/tools/actions-npm.sh
        mkdir "bin/linux/x64/node/node-v$node_version-linux-x64/lib"
        cp -r "node_modules/npm-7/node_modules" "bin/linux/x64/node/node-v$node_version-linux-x64/lib"
        export old_PATH="$PATH"
        export PATH="$(pwd)/bin/linux/x64/node/node-v$node_version-linux-x64/bin:$PATH"
        bin/linux/x64/node/node-v$node_version-linux-x64/bin/node node_modules/better-npm-audit/index.js audit
        export PATH="$old_PATH"
        rm -rf .npm/
        rm -r "bin/linux/x64/node/node-v$node_version-linux-x64/lib"
  audit_windows:
    runs-on: windows-latest
    needs: npm_windows
    if: needs.npm_windows.result == 'success'
    steps:
    - uses: actions/checkout@v3.0.2
    - name: audit
      shell: bash
      run: |
        docs/tools/git-config.bat
        git fetch --depth 1 origin +refs/tags/artifacts:refs/tags/artifacts --no-tags
        git restore --source=artifacts -- bin/
        rm -r "C:\\Program Files\\nodejs"
        export node_version=$(cat EIGHTFINITE-build/package.json | python -c "import sys, json; print(json.load(sys.stdin)['engines']['node'])")
        echo -n "$node_version" > node_version.txt
        export npm_version=$(curl -sS 'https://registry.npmjs.org/npm' | python -c "import sys, json; print(json.load(sys.stdin)['dist-tags']['latest-6'])")
        echo -n "$npm_version" > npm_version.txt
    - name: audit
      shell: cmd
      run: |
        set /p node_version=<node_version.txt
        set /p npm_version=<npm_version.txt
        mklink /d "C:\Program Files\nodejs" "%cd%\bin\windows\x64\node\node-v%node_version%-win-x64"
        bin\windows\x64\msys2\msys2-base-x86_64-20220603\msys64\usr\bin\wget.exe -nv -O "npm-%npm_version%.tgz" "https://registry.npmjs.org/npm/-/npm-%npm_version%.tgz"
    - name: audit
      shell: bash
      run: |
        export node_version=$(cat node_version.txt)
        export npm_version=$(cat npm_version.txt)
        mkdir -p "bin/all/all/npm/npm-$npm_version/npm"
        tar -xzf "npm-$npm_version.tgz" --strip-components=1 -C "bin/all/all/npm/npm-$npm_version/npm"
        rm "npm-$npm_version.tgz"
        bash --noprofile --norc -e -o pipefail docs/tools/actions-npm.sh
        cp -r "node_modules/npm-7/node_modules" "bin/windows/x64/node/node-v$node_version-win-x64"
        export old_PATH="$PATH"
        export PATH="$(pwd)/bin/windows/x64/node/node-v$node_version-win-x64:$PATH"
        bin/windows/x64/node/node-v$node_version-win-x64/node.exe node_modules/better-npm-audit/index.js audit
        export PATH="$old_PATH"
        rm -rf .npm/
        rm -r "bin/windows/x64/node/node-v$node_version-win-x64"
